var grid = [["", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "", "", "", "", "", ""]], userSubCord = [], userFuel = 10, userScore = 0, killScore = 0, rounds = 0, killerSubsCords = [], obsticleCords = [], fuelCanCords = [], gameStarted = !1, gameEnded = !1, dead = !1; function setUserSubmarinePosition(e) { usercontent = "‚öìÔ∏è", document.getElementById("grid").rows[parseInt(e[0], 10)].cells[parseInt(e[1], 10)].innerHTML = usercontent, userSubCord = e } function clearPosition(e) { content = "", document.getElementById("grid").rows[parseInt(e[0], 10)].cells[parseInt(e[1], 10)].innerHTML = content } function setKillerSubmarinePosition(e) { killcontent = "‚ò†Ô∏è", document.getElementById("grid").rows[parseInt(e[0], 10)].cells[parseInt(e[1], 10)].innerHTML = killcontent } function setObsticlePosition(e) { killcontent = "üö´", document.getElementById("grid").rows[parseInt(e[0], 10)].cells[parseInt(e[1], 10)].innerHTML = killcontent } function hide() { document.getElementById("start").style.display = "none", document.getElementById("reset").style.display = "block" } function updateLabel() { document.getElementById("score").innerHTML = "Score: " + userScore, document.getElementById("fuel").innerHTML = "Fuel Levels: " + userFuel, document.getElementById("computerScore").innerHTML = "Computer Score: " + killScore; document.getElementById("rounds").innerHTML = "Round: " + rounds; var e = document.getElementById("info"); e.innerHTML = "To move the Submarine (‚öìÔ∏è) Press either A,W,S,D. Collect as many points as you can but watch out for the Killer Subs (‚ò†Ô∏è).", !0 === gameEnded && (document.getElementById("over").style.display = "block", e.innerHTML = "Game is Over, Thanks for Playing my Submarine Game. Hope you had loads of fun.", e = document.getElementById("outcome"), !0 === dead ? e.innerHTML = "Computer Wins" : killScore < userScore && !1 === dead ? e.innerHTML = "You Have Won" : userScore < killScore ? e.innerHTML = "Computer Wins" : userScore === killScore && null != killerSubsCords[0] ? e.innerHTML = "It's a Draw" : e.innerHTML = "You Have Won") } function selectCell(e) { if (!0 === gameStarted) alert("game has started cannot change positions, restart game if you want too"); else { var r = e.parentNode.rowIndex, o = e.cellIndex, n = prompt("Enter value for cell (" + r + "," + o + "):"); if ("u" == n) { for (var t = !1, l = 0; l < 10; l++)for (var s = 0; s < 10; s++)grid[l][s] === n && (t = !0); !0 === t ? alert("User Sub Already Placed") : (e.textContent = n, grid[r][o] = n, userSubCord = [r, o]) } else "k" == n ? (e.textContent = n, grid[r][o] = n, killerSubsCords.push([r, o])) : "o" == n ? (e.textContent = n, grid[r][o] = n, obsticleCords.push([r, o])) : "5" <= n && n <= "9" ? (e.textContent = n, grid[r][o] = n, fuelCanCords.push([r, o])) : null != n && alert("value must be u , k , o or number between 5-9") } } function startGame() { if (0 === userSubCord.length) alert("A User sub must be added"); else { for (0 < userSubCord.length && setUserSubmarinePosition(userSubCord), i = 0; i < killerSubsCords.length; i++)setKillerSubmarinePosition(killcords = [killerSubsCords[i][0], killerSubsCords[i][1]]); for (i = 0; i < obsticleCords.length; i++)setObsticlePosition(obsticlecordinate = [obsticleCords[i][0], obsticleCords[i][1]]); null === killerSubsCords[0] ? gameEnded = !0 : gameStarted = !0, hide(), updateLabel() } } function moveUser(e) { var r = userSubCord; let o; switch (console.log(rounds), e) { case "a": o = [r[0], r[1] - 1]; break; case "d": o = [r[0], r[1] + 1]; break; case "w": o = [r[0] - 1, r[1]]; break; case "s": o = [r[0] + 1, r[1]]; break; default: return void alert("Invalid direction. Please enter 'a', 'd', 'w', or 's'.") }if (o[0] < 0 || 9 < o[0] || o[1] < 0 || 9 < o[1]) alert("Cannot move outside the grid."); else if ("o" === grid[o[0]][o[1]]) alert("Cannot move to a cell occupied by an obstacle."); else if (0 === userFuel) gameEnded = !0, rounds += 1, updateLabel(), alert("Game Over: Out of fuel"), endGame(); else { e = grid[o[0]][o[1]]; if (5 <= e && e <= 9) { for (userFuel += parseInt(e), userScore += parseInt(e), i = 0; i < fuelCanCords.length; i++)row = fuelCanCords[i][0], col = fuelCanCords[i][1], row === o[0] && col === o[1] && fuelCanCords.splice(i, 1); updateLabel() } ("k" === e ? (rounds += 1, dead = !0, endGame) : (grid[r[0]][r[1]] = "", clearPosition(r), grid[o[0]][o[1]] = "u", setUserSubmarinePosition(o), rounds += 1, console.log(rounds), userFuel--, updateLabel(), moveKillerSub))() } } function moveKillerSub() { for (let o = 0; o < killerSubsCords.length; o++) { var n = [killerSubsCords[o][0], killerSubsCords[o][1]], t = n[0], l = n[1], s = o, i = !1, a = []; for (let r = Math.max(0, t - 1); r <= Math.min(9, t + 1); r++)for (let e = Math.max(0, l - 1); e <= Math.min(9, l + 1); e++)if (r != t || e != l) { var d = grid[r][e]; if ("u" === d) return clearPosition(n), killerSubsCords.splice(s, 1), killerSubsCords.push([r, e]), grid[t][l] = "", grid[r][e] = "k", setKillerSubmarinePosition([r, e]), dead = !0, alert("Game Over! Killer Submarine destroyed your submarine."), updateLabel(), i = !1, void endGame(); if ("o" !== d && "k" !== d) { if (5 <= d && d <= 9) { for (o = 0; o < fuelCanCords.length; o++)row = fuelCanCords[o][0], col = fuelCanCords[o][1], row === r && col === e && fuelCanCords.splice(o, 1); return clearPosition(n), killerSubsCords.splice(s, 1), killerSubsCords.push([r, e]), grid[t][l] = "", grid[r][e] = "k", alert("Killer sub stole points"), setKillerSubmarinePosition([r, e]), killScore += parseInt(d), updateLabel(), void (i = !1) } a.push([r, e]), i = !0 } } !0 === i && (randomMove = a[Math.floor(Math.random() * a.length)], clearPosition(n), killerSubsCords.splice(s, 1), killerSubsCords.push(randomMove), grid[t][l] = "", grid[randomMove[0]][randomMove[1]] = "k", setKillerSubmarinePosition(randomMove)) } } function endGame() { gameEnded = !0, updateLabel() } document.addEventListener("keydown", function (e) { if (!e.defaultPrevented && !1 !== gameStarted && !0 !== gameEnded) { switch (e.key) { case "a": moveUser("a"); break; case "d": moveUser("d"); break; case "w": moveUser("w"); break; case "s": moveUser("s") }e.preventDefault() } });
